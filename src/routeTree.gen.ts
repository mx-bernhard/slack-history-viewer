/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SearchIndexRouteImport } from './routes/search/index'
import { Route as MainIndexRouteImport } from './routes/main/index'
import { Route as MainChatIdRouteImport } from './routes/main/$chatId'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const SearchIndexRoute = SearchIndexRouteImport.update({
  id: '/search/',
  path: '/search/',
  getParentRoute: () => rootRouteImport,
} as any)
const MainIndexRoute = MainIndexRouteImport.update({
  id: '/main/',
  path: '/main/',
  getParentRoute: () => rootRouteImport,
} as any)
const MainChatIdRoute = MainChatIdRouteImport.update({
  id: '/main/$chatId',
  path: '/main/$chatId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/main/$chatId': typeof MainChatIdRoute
  '/main': typeof MainIndexRoute
  '/search': typeof SearchIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/main/$chatId': typeof MainChatIdRoute
  '/main': typeof MainIndexRoute
  '/search': typeof SearchIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/main/$chatId': typeof MainChatIdRoute
  '/main/': typeof MainIndexRoute
  '/search/': typeof SearchIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/main/$chatId' | '/main' | '/search'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/main/$chatId' | '/main' | '/search'
  id: '__root__' | '/' | '/main/$chatId' | '/main/' | '/search/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  MainChatIdRoute: typeof MainChatIdRoute
  MainIndexRoute: typeof MainIndexRoute
  SearchIndexRoute: typeof SearchIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/search/': {
      id: '/search/'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof SearchIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/main/': {
      id: '/main/'
      path: '/main'
      fullPath: '/main'
      preLoaderRoute: typeof MainIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/main/$chatId': {
      id: '/main/$chatId'
      path: '/main/$chatId'
      fullPath: '/main/$chatId'
      preLoaderRoute: typeof MainChatIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  MainChatIdRoute: MainChatIdRoute,
  MainIndexRoute: MainIndexRoute,
  SearchIndexRoute: SearchIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
